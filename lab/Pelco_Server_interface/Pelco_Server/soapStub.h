/* soapStub.h
   Generated by gSOAP 2.8.33 for slaveexecute.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#define SOAP_NAMESPACE_OF_ns2	"http://ws.apache.org/namespaces/axis2/enum"
#define SOAP_NAMESPACE_OF_ns3	"http://webservice.bean.protocol104.archon.sict/xsd"
#define SOAP_NAMESPACE_OF_ns1	"http://webservice.protocol104.archon.sict"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20833
# error "GSOAP VERSION 20833 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumeration Types                                                          *
 *                                                                            *
\******************************************************************************/


/* slaveexecute.h:172 */
#ifndef SOAP_TYPE_ns2__OperationType
#define SOAP_TYPE_ns2__OperationType (7)
/* ns2:OperationType */
enum ns2__OperationType {
	ns2__OperationType__CONN = 0,
	ns2__OperationType__DISCONN = 1,
	ns2__OperationType__GETSTATE = 2,
	ns2__OperationType__EXECUTEPLAN = 3,
	ns2__OperationType__UPDATERELATION = 4,
	ns2__OperationType__REMOTECONTROL = 5,
	ns2__OperationType__TELECONTROL = 6,
	ns2__OperationType__PREPOSITION = 7,
	ns2__OperationType__SELECTPOS = 8,
	ns2__OperationType__EXECUTEPOS = 9,
	ns2__OperationType__REQREC = 10,
	ns2__OperationType__ACKREC = 11,
	ns2__OperationType__CAMSTATUS = 12
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Structs and Unions                                                         *
 *                                                                            *
\******************************************************************************/

struct ns3__ProtocolObject;	/* slaveexecute.h:229 */
struct _ns1__SlaveExecuteCMD;	/* slaveexecute.h:256 */
struct _ns1__SlaveExecuteCMDResponse;	/* slaveexecute.h:273 */
struct _ns1__ExecuteCMD;	/* slaveexecute.h:288 */
struct _ns1__ExecuteCMDResponse;	/* slaveexecute.h:303 */
struct __ns1__HelloWorldResponse;	/* slaveexecute.h:445 */
struct __ns1__HelloWorld;	/* slaveexecute.h:489 */
struct __ns1__SlaveExecuteCMD;	/* slaveexecute.h:543 */
struct __ns1__ReportIPResponse;	/* slaveexecute.h:554 */
struct __ns1__ReportIP;	/* slaveexecute.h:598 */
struct __ns1__ExecuteCMD;	/* slaveexecute.h:652 */
struct __ns1__HelloWorldResponse_;	/* slaveexecute.h:663 */
struct __ns1__HelloWorld_;	/* slaveexecute.h:707 */
struct __ns1__SlaveExecuteCMD_;	/* slaveexecute.h:761 */
struct __ns1__ReportIPResponse_;	/* slaveexecute.h:772 */
struct __ns1__ReportIP_;	/* slaveexecute.h:816 */
struct __ns1__ExecuteCMD_;	/* slaveexecute.h:870 */

/* slaveexecute.h:229 */
#ifndef SOAP_TYPE_ns3__ProtocolObject
#define SOAP_TYPE_ns3__ProtocolObject (8)
/* complex XSD type 'ns3:ProtocolObject': */
struct ns3__ProtocolObject {
        /** Optional element 'ns3:content' of XSD type 'xsd:string' */
        char *content;
        /** Optional element 'ns3:operation' of XSD type 'ns2:OperationType' */
        enum ns2__OperationType *operation;
        /** Optional element 'ns3:stationID' of XSD type 'xsd:string' */
        char *stationID;
};
#endif

/* slaveexecute.h:256 */
#ifndef SOAP_TYPE__ns1__SlaveExecuteCMD
#define SOAP_TYPE__ns1__SlaveExecuteCMD (10)
/* complex XSD type 'ns1:SlaveExecuteCMD': */
struct _ns1__SlaveExecuteCMD {
        /** Optional element 'ns1:id' of XSD type 'xsd:string' */
        char *id;
        /** Optional element 'ns1:content' of XSD type 'xsd:string' */
        char *content;
};
#endif

/* slaveexecute.h:273 */
#ifndef SOAP_TYPE__ns1__SlaveExecuteCMDResponse
#define SOAP_TYPE__ns1__SlaveExecuteCMDResponse (11)
/* complex XSD type 'ns1:SlaveExecuteCMDResponse': */
struct _ns1__SlaveExecuteCMDResponse {
        /** Optional element 'ns1:return' of XSD type 'xsd:string' */
        char *return_;
};
#endif

/* slaveexecute.h:288 */
#ifndef SOAP_TYPE__ns1__ExecuteCMD
#define SOAP_TYPE__ns1__ExecuteCMD (12)
/* complex XSD type 'ns1:ExecuteCMD': */
struct _ns1__ExecuteCMD {
        /** Optional element 'ns1:obj' of XSD type 'ns3:ProtocolObject' */
        struct ns3__ProtocolObject *obj;
};
#endif

/* slaveexecute.h:303 */
#ifndef SOAP_TYPE__ns1__ExecuteCMDResponse
#define SOAP_TYPE__ns1__ExecuteCMDResponse (14)
/* complex XSD type 'ns1:ExecuteCMDResponse': */
struct _ns1__ExecuteCMDResponse {
        /** Optional element 'ns1:return' of XSD type 'xsd:string' */
        char *return_;
};
#endif

/* slaveexecute.h:445 */
#ifndef SOAP_TYPE___ns1__HelloWorldResponse
#define SOAP_TYPE___ns1__HelloWorldResponse (15)
/* Wrapper: */
struct __ns1__HelloWorldResponse {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* slaveexecute.h:489 */
#ifndef SOAP_TYPE___ns1__HelloWorld
#define SOAP_TYPE___ns1__HelloWorld (18)
/* Wrapper: */
struct __ns1__HelloWorld {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* slaveexecute.h:543 */
#ifndef SOAP_TYPE___ns1__SlaveExecuteCMD
#define SOAP_TYPE___ns1__SlaveExecuteCMD (22)
/* Wrapper: */
struct __ns1__SlaveExecuteCMD {
        /** Optional element 'ns1:SlaveExecuteCMD' of XSD type 'ns1:SlaveExecuteCMD' */
        struct _ns1__SlaveExecuteCMD *ns1__SlaveExecuteCMD;
};
#endif

/* slaveexecute.h:554 */
#ifndef SOAP_TYPE___ns1__ReportIPResponse
#define SOAP_TYPE___ns1__ReportIPResponse (23)
/* Wrapper: */
struct __ns1__ReportIPResponse {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* slaveexecute.h:598 */
#ifndef SOAP_TYPE___ns1__ReportIP
#define SOAP_TYPE___ns1__ReportIP (26)
/* Wrapper: */
struct __ns1__ReportIP {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* slaveexecute.h:652 */
#ifndef SOAP_TYPE___ns1__ExecuteCMD
#define SOAP_TYPE___ns1__ExecuteCMD (30)
/* Wrapper: */
struct __ns1__ExecuteCMD {
        /** Optional element 'ns1:ExecuteCMD' of XSD type 'ns1:ExecuteCMD' */
        struct _ns1__ExecuteCMD *ns1__ExecuteCMD;
};
#endif

/* slaveexecute.h:663 */
#ifndef SOAP_TYPE___ns1__HelloWorldResponse_
#define SOAP_TYPE___ns1__HelloWorldResponse_ (31)
/* Wrapper: */
struct __ns1__HelloWorldResponse_ {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* slaveexecute.h:707 */
#ifndef SOAP_TYPE___ns1__HelloWorld_
#define SOAP_TYPE___ns1__HelloWorld_ (34)
/* Wrapper: */
struct __ns1__HelloWorld_ {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* slaveexecute.h:761 */
#ifndef SOAP_TYPE___ns1__SlaveExecuteCMD_
#define SOAP_TYPE___ns1__SlaveExecuteCMD_ (36)
/* Wrapper: */
struct __ns1__SlaveExecuteCMD_ {
        /** Optional element 'ns1:SlaveExecuteCMD' of XSD type 'ns1:SlaveExecuteCMD' */
        struct _ns1__SlaveExecuteCMD *ns1__SlaveExecuteCMD;
};
#endif

/* slaveexecute.h:772 */
#ifndef SOAP_TYPE___ns1__ReportIPResponse_
#define SOAP_TYPE___ns1__ReportIPResponse_ (37)
/* Wrapper: */
struct __ns1__ReportIPResponse_ {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* slaveexecute.h:816 */
#ifndef SOAP_TYPE___ns1__ReportIP_
#define SOAP_TYPE___ns1__ReportIP_ (40)
/* Wrapper: */
struct __ns1__ReportIP_ {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* slaveexecute.h:870 */
#ifndef SOAP_TYPE___ns1__ExecuteCMD_
#define SOAP_TYPE___ns1__ExecuteCMD_ (42)
/* Wrapper: */
struct __ns1__ExecuteCMD_ {
        /** Optional element 'ns1:ExecuteCMD' of XSD type 'ns1:ExecuteCMD' */
        struct _ns1__ExecuteCMD *ns1__ExecuteCMD;
};
#endif

/* slaveexecute.h:967 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (43)
/* SOAP_ENV__Header: */
struct SOAP_ENV__Header {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif
#endif

/* slaveexecute.h:967 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (44)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_ENV__Code {
        /** Optional element 'SOAP-ENV:Value' of XSD type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
};
#endif
#endif

/* slaveexecute.h:967 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (46)
/* SOAP_ENV__Detail: */
struct SOAP_ENV__Detail {
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_T assigned to __type */
        /** Do not create a cyclic data structure throught this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
};
#endif
#endif

/* slaveexecute.h:967 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (49)
/* SOAP_ENV__Reason: */
struct SOAP_ENV__Reason {
        /** Optional element 'SOAP-ENV:Text' of XSD type 'xsd:string' */
        char *SOAP_ENV__Text;
};
#endif
#endif

/* slaveexecute.h:967 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (50)
/* SOAP_ENV__Fault: */
struct SOAP_ENV__Fault {
        /** Optional element 'faultcode' of XSD type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XSD type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XSD type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XSD type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XSD type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XSD type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* slaveexecute.h:126 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* slaveexecute.h:126 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* enum ns2__OperationType has binding name 'ns2__OperationType' for type 'ns2:OperationType' */
#ifndef SOAP_TYPE_ns2__OperationType
#define SOAP_TYPE_ns2__OperationType (7)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (50)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (49)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (46)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (44)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (43)
#endif

/* struct _ns1__ExecuteCMDResponse has binding name '_ns1__ExecuteCMDResponse' for type '' */
#ifndef SOAP_TYPE__ns1__ExecuteCMDResponse
#define SOAP_TYPE__ns1__ExecuteCMDResponse (14)
#endif

/* struct _ns1__ExecuteCMD has binding name '_ns1__ExecuteCMD' for type '' */
#ifndef SOAP_TYPE__ns1__ExecuteCMD
#define SOAP_TYPE__ns1__ExecuteCMD (12)
#endif

/* struct _ns1__SlaveExecuteCMDResponse has binding name '_ns1__SlaveExecuteCMDResponse' for type '' */
#ifndef SOAP_TYPE__ns1__SlaveExecuteCMDResponse
#define SOAP_TYPE__ns1__SlaveExecuteCMDResponse (11)
#endif

/* struct _ns1__SlaveExecuteCMD has binding name '_ns1__SlaveExecuteCMD' for type '' */
#ifndef SOAP_TYPE__ns1__SlaveExecuteCMD
#define SOAP_TYPE__ns1__SlaveExecuteCMD (10)
#endif

/* struct ns3__ProtocolObject has binding name 'ns3__ProtocolObject' for type 'ns3:ProtocolObject' */
#ifndef SOAP_TYPE_ns3__ProtocolObject
#define SOAP_TYPE_ns3__ProtocolObject (8)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (52)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (51)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (45)
#endif

/* struct __ns1__ReportIPResponse_ * has binding name 'PointerTo__ns1__ReportIPResponse_' for type '-ns1:ReportIPResponse' */
#ifndef SOAP_TYPE_PointerTo__ns1__ReportIPResponse_
#define SOAP_TYPE_PointerTo__ns1__ReportIPResponse_ (38)
#endif

/* struct __ns1__HelloWorldResponse_ * has binding name 'PointerTo__ns1__HelloWorldResponse_' for type '-ns1:HelloWorldResponse' */
#ifndef SOAP_TYPE_PointerTo__ns1__HelloWorldResponse_
#define SOAP_TYPE_PointerTo__ns1__HelloWorldResponse_ (32)
#endif

/* struct _ns1__ExecuteCMDResponse * has binding name 'PointerTo_ns1__ExecuteCMDResponse' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__ExecuteCMDResponse
#define SOAP_TYPE_PointerTo_ns1__ExecuteCMDResponse (28)
#endif

/* struct _ns1__ExecuteCMD * has binding name 'PointerTo_ns1__ExecuteCMD' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__ExecuteCMD
#define SOAP_TYPE_PointerTo_ns1__ExecuteCMD (27)
#endif

/* struct __ns1__ReportIPResponse * has binding name 'PointerTo__ns1__ReportIPResponse' for type '-ns1:ReportIPResponse' */
#ifndef SOAP_TYPE_PointerTo__ns1__ReportIPResponse
#define SOAP_TYPE_PointerTo__ns1__ReportIPResponse (24)
#endif

/* struct _ns1__SlaveExecuteCMDResponse * has binding name 'PointerTo_ns1__SlaveExecuteCMDResponse' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__SlaveExecuteCMDResponse
#define SOAP_TYPE_PointerTo_ns1__SlaveExecuteCMDResponse (20)
#endif

/* struct _ns1__SlaveExecuteCMD * has binding name 'PointerTo_ns1__SlaveExecuteCMD' for type '' */
#ifndef SOAP_TYPE_PointerTo_ns1__SlaveExecuteCMD
#define SOAP_TYPE_PointerTo_ns1__SlaveExecuteCMD (19)
#endif

/* struct __ns1__HelloWorldResponse * has binding name 'PointerTo__ns1__HelloWorldResponse' for type '-ns1:HelloWorldResponse' */
#ifndef SOAP_TYPE_PointerTo__ns1__HelloWorldResponse
#define SOAP_TYPE_PointerTo__ns1__HelloWorldResponse (16)
#endif

/* struct ns3__ProtocolObject * has binding name 'PointerTons3__ProtocolObject' for type 'ns3:ProtocolObject' */
#ifndef SOAP_TYPE_PointerTons3__ProtocolObject
#define SOAP_TYPE_PointerTons3__ProtocolObject (13)
#endif

/* enum ns2__OperationType * has binding name 'PointerTons2__OperationType' for type 'ns2:OperationType' */
#ifndef SOAP_TYPE_PointerTons2__OperationType
#define SOAP_TYPE_PointerTons2__OperationType (9)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stub Functions                                            *
 *                                                                            *
\******************************************************************************/

    SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__HelloWorld(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct __ns1__HelloWorldResponse *_param_1);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SlaveExecuteCMD(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__SlaveExecuteCMD *ns1__SlaveExecuteCMD, struct _ns1__SlaveExecuteCMDResponse *ns1__SlaveExecuteCMDResponse);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ReportIP(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct __ns1__ReportIPResponse *_param_1);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExecuteCMD(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__ExecuteCMD *ns1__ExecuteCMD, struct _ns1__ExecuteCMDResponse *ns1__ExecuteCMDResponse);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__HelloWorld_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct __ns1__HelloWorldResponse_ *_param_1);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SlaveExecuteCMD_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__SlaveExecuteCMD *ns1__SlaveExecuteCMD, struct _ns1__SlaveExecuteCMDResponse *ns1__SlaveExecuteCMDResponse);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ReportIP_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct __ns1__ReportIPResponse_ *_param_1);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExecuteCMD_(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__ExecuteCMD *ns1__ExecuteCMD, struct _ns1__ExecuteCMDResponse *ns1__ExecuteCMDResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/

    /** Web service operation '__ns1__HelloWorld' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 __ns1__HelloWorld(struct soap*, struct __ns1__HelloWorldResponse *_param_1);
    /** Web service operation '__ns1__SlaveExecuteCMD' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 __ns1__SlaveExecuteCMD(struct soap*, struct _ns1__SlaveExecuteCMD *ns1__SlaveExecuteCMD, struct _ns1__SlaveExecuteCMDResponse *ns1__SlaveExecuteCMDResponse);
    /** Web service operation '__ns1__ReportIP' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 __ns1__ReportIP(struct soap*, struct __ns1__ReportIPResponse *_param_1);
    /** Web service operation '__ns1__ExecuteCMD' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 __ns1__ExecuteCMD(struct soap*, struct _ns1__ExecuteCMD *ns1__ExecuteCMD, struct _ns1__ExecuteCMDResponse *ns1__ExecuteCMDResponse);
    /** Web service operation '__ns1__HelloWorld_' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 __ns1__HelloWorld_(struct soap*, struct __ns1__HelloWorldResponse_ *_param_1);
    /** Web service operation '__ns1__SlaveExecuteCMD_' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 __ns1__SlaveExecuteCMD_(struct soap*, struct _ns1__SlaveExecuteCMD *ns1__SlaveExecuteCMD, struct _ns1__SlaveExecuteCMDResponse *ns1__SlaveExecuteCMDResponse);
    /** Web service operation '__ns1__ReportIP_' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 __ns1__ReportIP_(struct soap*, struct __ns1__ReportIPResponse_ *_param_1);
    /** Web service operation '__ns1__ExecuteCMD_' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 __ns1__ExecuteCMD_(struct soap*, struct _ns1__ExecuteCMD *ns1__ExecuteCMD, struct _ns1__ExecuteCMDResponse *ns1__ExecuteCMDResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__HelloWorld(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__SlaveExecuteCMD(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__ReportIP(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__ExecuteCMD(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__HelloWorld_(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__SlaveExecuteCMD_(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__ReportIP_(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__ExecuteCMD_(struct soap*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
