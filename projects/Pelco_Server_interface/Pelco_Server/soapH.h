/* soapH.h
   Generated by gSOAP 2.8.33 for slaveexecute.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns2__OperationType_DEFINED
#define SOAP_TYPE_ns2__OperationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__OperationType(struct soap*, enum ns2__OperationType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__OperationType(struct soap*, const char*, int, const enum ns2__OperationType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__OperationType2s(struct soap*, enum ns2__OperationType);
SOAP_FMAC3 enum ns2__OperationType * SOAP_FMAC4 soap_in_ns2__OperationType(struct soap*, const char*, enum ns2__OperationType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__OperationType(struct soap*, const char*, enum ns2__OperationType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__OperationType(struct soap*, const enum ns2__OperationType *, const char*, const char*);

#ifndef soap_write_ns2__OperationType
#define soap_write_ns2__OperationType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ns2__OperationType(soap, data, "ns2:OperationType", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum ns2__OperationType * SOAP_FMAC4 soap_get_ns2__OperationType(struct soap*, enum ns2__OperationType *, const char*, const char*);

#ifndef soap_read_ns2__OperationType
#define soap_read_ns2__OperationType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__OperationType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE___ns1__ExecuteCMD__DEFINED
#define SOAP_TYPE___ns1__ExecuteCMD__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ExecuteCMD_(struct soap*, struct __ns1__ExecuteCMD_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ExecuteCMD_(struct soap*, const struct __ns1__ExecuteCMD_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ExecuteCMD_(struct soap*, const char*, int, const struct __ns1__ExecuteCMD_ *, const char*);
SOAP_FMAC3 struct __ns1__ExecuteCMD_ * SOAP_FMAC4 soap_in___ns1__ExecuteCMD_(struct soap*, const char*, struct __ns1__ExecuteCMD_ *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ExecuteCMD_(struct soap*, const struct __ns1__ExecuteCMD_ *, const char*, const char*);

#ifndef soap_write___ns1__ExecuteCMD_
#define soap_write___ns1__ExecuteCMD_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__ExecuteCMD_(soap, data), 0) || soap_put___ns1__ExecuteCMD_(soap, data, "-ns1:ExecuteCMD", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__ExecuteCMD_ * SOAP_FMAC4 soap_get___ns1__ExecuteCMD_(struct soap*, struct __ns1__ExecuteCMD_ *, const char*, const char*);

#ifndef soap_read___ns1__ExecuteCMD_
#define soap_read___ns1__ExecuteCMD_(soap, data) ( ((data) ? (soap_default___ns1__ExecuteCMD_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__ExecuteCMD_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__ReportIP__DEFINED
#define SOAP_TYPE___ns1__ReportIP__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ReportIP_(struct soap*, struct __ns1__ReportIP_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ReportIP_(struct soap*, const struct __ns1__ReportIP_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ReportIP_(struct soap*, const char*, int, const struct __ns1__ReportIP_ *, const char*);
SOAP_FMAC3 struct __ns1__ReportIP_ * SOAP_FMAC4 soap_in___ns1__ReportIP_(struct soap*, const char*, struct __ns1__ReportIP_ *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ReportIP_(struct soap*, const struct __ns1__ReportIP_ *, const char*, const char*);

#ifndef soap_write___ns1__ReportIP_
#define soap_write___ns1__ReportIP_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__ReportIP_(soap, data), 0) || soap_put___ns1__ReportIP_(soap, data, "-ns1:ReportIP", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__ReportIP_ * SOAP_FMAC4 soap_get___ns1__ReportIP_(struct soap*, struct __ns1__ReportIP_ *, const char*, const char*);

#ifndef soap_read___ns1__ReportIP_
#define soap_read___ns1__ReportIP_(soap, data) ( ((data) ? (soap_default___ns1__ReportIP_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__ReportIP_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__ReportIPResponse__DEFINED
#define SOAP_TYPE___ns1__ReportIPResponse__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ReportIPResponse_(struct soap*, struct __ns1__ReportIPResponse_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ReportIPResponse_(struct soap*, const struct __ns1__ReportIPResponse_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ReportIPResponse_(struct soap*, const char*, int, const struct __ns1__ReportIPResponse_ *, const char*);
SOAP_FMAC3 struct __ns1__ReportIPResponse_ * SOAP_FMAC4 soap_in___ns1__ReportIPResponse_(struct soap*, const char*, struct __ns1__ReportIPResponse_ *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ReportIPResponse_(struct soap*, const struct __ns1__ReportIPResponse_ *, const char*, const char*);

#ifndef soap_write___ns1__ReportIPResponse_
#define soap_write___ns1__ReportIPResponse_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__ReportIPResponse_(soap, data), 0) || soap_put___ns1__ReportIPResponse_(soap, data, "-ns1:ReportIPResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__ReportIPResponse_ * SOAP_FMAC4 soap_get___ns1__ReportIPResponse_(struct soap*, struct __ns1__ReportIPResponse_ *, const char*, const char*);

#ifndef soap_read___ns1__ReportIPResponse_
#define soap_read___ns1__ReportIPResponse_(soap, data) ( ((data) ? (soap_default___ns1__ReportIPResponse_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__ReportIPResponse_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__SlaveExecuteCMD__DEFINED
#define SOAP_TYPE___ns1__SlaveExecuteCMD__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SlaveExecuteCMD_(struct soap*, struct __ns1__SlaveExecuteCMD_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SlaveExecuteCMD_(struct soap*, const struct __ns1__SlaveExecuteCMD_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SlaveExecuteCMD_(struct soap*, const char*, int, const struct __ns1__SlaveExecuteCMD_ *, const char*);
SOAP_FMAC3 struct __ns1__SlaveExecuteCMD_ * SOAP_FMAC4 soap_in___ns1__SlaveExecuteCMD_(struct soap*, const char*, struct __ns1__SlaveExecuteCMD_ *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SlaveExecuteCMD_(struct soap*, const struct __ns1__SlaveExecuteCMD_ *, const char*, const char*);

#ifndef soap_write___ns1__SlaveExecuteCMD_
#define soap_write___ns1__SlaveExecuteCMD_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SlaveExecuteCMD_(soap, data), 0) || soap_put___ns1__SlaveExecuteCMD_(soap, data, "-ns1:SlaveExecuteCMD", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SlaveExecuteCMD_ * SOAP_FMAC4 soap_get___ns1__SlaveExecuteCMD_(struct soap*, struct __ns1__SlaveExecuteCMD_ *, const char*, const char*);

#ifndef soap_read___ns1__SlaveExecuteCMD_
#define soap_read___ns1__SlaveExecuteCMD_(soap, data) ( ((data) ? (soap_default___ns1__SlaveExecuteCMD_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__SlaveExecuteCMD_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__HelloWorld__DEFINED
#define SOAP_TYPE___ns1__HelloWorld__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__HelloWorld_(struct soap*, struct __ns1__HelloWorld_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__HelloWorld_(struct soap*, const struct __ns1__HelloWorld_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__HelloWorld_(struct soap*, const char*, int, const struct __ns1__HelloWorld_ *, const char*);
SOAP_FMAC3 struct __ns1__HelloWorld_ * SOAP_FMAC4 soap_in___ns1__HelloWorld_(struct soap*, const char*, struct __ns1__HelloWorld_ *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__HelloWorld_(struct soap*, const struct __ns1__HelloWorld_ *, const char*, const char*);

#ifndef soap_write___ns1__HelloWorld_
#define soap_write___ns1__HelloWorld_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__HelloWorld_(soap, data), 0) || soap_put___ns1__HelloWorld_(soap, data, "-ns1:HelloWorld", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__HelloWorld_ * SOAP_FMAC4 soap_get___ns1__HelloWorld_(struct soap*, struct __ns1__HelloWorld_ *, const char*, const char*);

#ifndef soap_read___ns1__HelloWorld_
#define soap_read___ns1__HelloWorld_(soap, data) ( ((data) ? (soap_default___ns1__HelloWorld_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__HelloWorld_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__HelloWorldResponse__DEFINED
#define SOAP_TYPE___ns1__HelloWorldResponse__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__HelloWorldResponse_(struct soap*, struct __ns1__HelloWorldResponse_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__HelloWorldResponse_(struct soap*, const struct __ns1__HelloWorldResponse_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__HelloWorldResponse_(struct soap*, const char*, int, const struct __ns1__HelloWorldResponse_ *, const char*);
SOAP_FMAC3 struct __ns1__HelloWorldResponse_ * SOAP_FMAC4 soap_in___ns1__HelloWorldResponse_(struct soap*, const char*, struct __ns1__HelloWorldResponse_ *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__HelloWorldResponse_(struct soap*, const struct __ns1__HelloWorldResponse_ *, const char*, const char*);

#ifndef soap_write___ns1__HelloWorldResponse_
#define soap_write___ns1__HelloWorldResponse_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__HelloWorldResponse_(soap, data), 0) || soap_put___ns1__HelloWorldResponse_(soap, data, "-ns1:HelloWorldResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__HelloWorldResponse_ * SOAP_FMAC4 soap_get___ns1__HelloWorldResponse_(struct soap*, struct __ns1__HelloWorldResponse_ *, const char*, const char*);

#ifndef soap_read___ns1__HelloWorldResponse_
#define soap_read___ns1__HelloWorldResponse_(soap, data) ( ((data) ? (soap_default___ns1__HelloWorldResponse_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__HelloWorldResponse_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__ExecuteCMD_DEFINED
#define SOAP_TYPE___ns1__ExecuteCMD_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ExecuteCMD(struct soap*, struct __ns1__ExecuteCMD *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ExecuteCMD(struct soap*, const struct __ns1__ExecuteCMD *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ExecuteCMD(struct soap*, const char*, int, const struct __ns1__ExecuteCMD *, const char*);
SOAP_FMAC3 struct __ns1__ExecuteCMD * SOAP_FMAC4 soap_in___ns1__ExecuteCMD(struct soap*, const char*, struct __ns1__ExecuteCMD *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ExecuteCMD(struct soap*, const struct __ns1__ExecuteCMD *, const char*, const char*);

#ifndef soap_write___ns1__ExecuteCMD
#define soap_write___ns1__ExecuteCMD(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__ExecuteCMD(soap, data), 0) || soap_put___ns1__ExecuteCMD(soap, data, "-ns1:ExecuteCMD", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__ExecuteCMD * SOAP_FMAC4 soap_get___ns1__ExecuteCMD(struct soap*, struct __ns1__ExecuteCMD *, const char*, const char*);

#ifndef soap_read___ns1__ExecuteCMD
#define soap_read___ns1__ExecuteCMD(soap, data) ( ((data) ? (soap_default___ns1__ExecuteCMD(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__ExecuteCMD(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__ReportIP_DEFINED
#define SOAP_TYPE___ns1__ReportIP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ReportIP(struct soap*, struct __ns1__ReportIP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ReportIP(struct soap*, const struct __ns1__ReportIP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ReportIP(struct soap*, const char*, int, const struct __ns1__ReportIP *, const char*);
SOAP_FMAC3 struct __ns1__ReportIP * SOAP_FMAC4 soap_in___ns1__ReportIP(struct soap*, const char*, struct __ns1__ReportIP *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ReportIP(struct soap*, const struct __ns1__ReportIP *, const char*, const char*);

#ifndef soap_write___ns1__ReportIP
#define soap_write___ns1__ReportIP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__ReportIP(soap, data), 0) || soap_put___ns1__ReportIP(soap, data, "-ns1:ReportIP", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__ReportIP * SOAP_FMAC4 soap_get___ns1__ReportIP(struct soap*, struct __ns1__ReportIP *, const char*, const char*);

#ifndef soap_read___ns1__ReportIP
#define soap_read___ns1__ReportIP(soap, data) ( ((data) ? (soap_default___ns1__ReportIP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__ReportIP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__ReportIPResponse_DEFINED
#define SOAP_TYPE___ns1__ReportIPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__ReportIPResponse(struct soap*, struct __ns1__ReportIPResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__ReportIPResponse(struct soap*, const struct __ns1__ReportIPResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__ReportIPResponse(struct soap*, const char*, int, const struct __ns1__ReportIPResponse *, const char*);
SOAP_FMAC3 struct __ns1__ReportIPResponse * SOAP_FMAC4 soap_in___ns1__ReportIPResponse(struct soap*, const char*, struct __ns1__ReportIPResponse *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__ReportIPResponse(struct soap*, const struct __ns1__ReportIPResponse *, const char*, const char*);

#ifndef soap_write___ns1__ReportIPResponse
#define soap_write___ns1__ReportIPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__ReportIPResponse(soap, data), 0) || soap_put___ns1__ReportIPResponse(soap, data, "-ns1:ReportIPResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__ReportIPResponse * SOAP_FMAC4 soap_get___ns1__ReportIPResponse(struct soap*, struct __ns1__ReportIPResponse *, const char*, const char*);

#ifndef soap_read___ns1__ReportIPResponse
#define soap_read___ns1__ReportIPResponse(soap, data) ( ((data) ? (soap_default___ns1__ReportIPResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__ReportIPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__SlaveExecuteCMD_DEFINED
#define SOAP_TYPE___ns1__SlaveExecuteCMD_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__SlaveExecuteCMD(struct soap*, struct __ns1__SlaveExecuteCMD *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__SlaveExecuteCMD(struct soap*, const struct __ns1__SlaveExecuteCMD *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__SlaveExecuteCMD(struct soap*, const char*, int, const struct __ns1__SlaveExecuteCMD *, const char*);
SOAP_FMAC3 struct __ns1__SlaveExecuteCMD * SOAP_FMAC4 soap_in___ns1__SlaveExecuteCMD(struct soap*, const char*, struct __ns1__SlaveExecuteCMD *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__SlaveExecuteCMD(struct soap*, const struct __ns1__SlaveExecuteCMD *, const char*, const char*);

#ifndef soap_write___ns1__SlaveExecuteCMD
#define soap_write___ns1__SlaveExecuteCMD(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__SlaveExecuteCMD(soap, data), 0) || soap_put___ns1__SlaveExecuteCMD(soap, data, "-ns1:SlaveExecuteCMD", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__SlaveExecuteCMD * SOAP_FMAC4 soap_get___ns1__SlaveExecuteCMD(struct soap*, struct __ns1__SlaveExecuteCMD *, const char*, const char*);

#ifndef soap_read___ns1__SlaveExecuteCMD
#define soap_read___ns1__SlaveExecuteCMD(soap, data) ( ((data) ? (soap_default___ns1__SlaveExecuteCMD(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__SlaveExecuteCMD(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__HelloWorld_DEFINED
#define SOAP_TYPE___ns1__HelloWorld_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__HelloWorld(struct soap*, struct __ns1__HelloWorld *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__HelloWorld(struct soap*, const struct __ns1__HelloWorld *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__HelloWorld(struct soap*, const char*, int, const struct __ns1__HelloWorld *, const char*);
SOAP_FMAC3 struct __ns1__HelloWorld * SOAP_FMAC4 soap_in___ns1__HelloWorld(struct soap*, const char*, struct __ns1__HelloWorld *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__HelloWorld(struct soap*, const struct __ns1__HelloWorld *, const char*, const char*);

#ifndef soap_write___ns1__HelloWorld
#define soap_write___ns1__HelloWorld(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__HelloWorld(soap, data), 0) || soap_put___ns1__HelloWorld(soap, data, "-ns1:HelloWorld", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__HelloWorld * SOAP_FMAC4 soap_get___ns1__HelloWorld(struct soap*, struct __ns1__HelloWorld *, const char*, const char*);

#ifndef soap_read___ns1__HelloWorld
#define soap_read___ns1__HelloWorld(soap, data) ( ((data) ? (soap_default___ns1__HelloWorld(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__HelloWorld(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___ns1__HelloWorldResponse_DEFINED
#define SOAP_TYPE___ns1__HelloWorldResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__HelloWorldResponse(struct soap*, struct __ns1__HelloWorldResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__HelloWorldResponse(struct soap*, const struct __ns1__HelloWorldResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__HelloWorldResponse(struct soap*, const char*, int, const struct __ns1__HelloWorldResponse *, const char*);
SOAP_FMAC3 struct __ns1__HelloWorldResponse * SOAP_FMAC4 soap_in___ns1__HelloWorldResponse(struct soap*, const char*, struct __ns1__HelloWorldResponse *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__HelloWorldResponse(struct soap*, const struct __ns1__HelloWorldResponse *, const char*, const char*);

#ifndef soap_write___ns1__HelloWorldResponse
#define soap_write___ns1__HelloWorldResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__HelloWorldResponse(soap, data), 0) || soap_put___ns1__HelloWorldResponse(soap, data, "-ns1:HelloWorldResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__HelloWorldResponse * SOAP_FMAC4 soap_get___ns1__HelloWorldResponse(struct soap*, struct __ns1__HelloWorldResponse *, const char*, const char*);

#ifndef soap_read___ns1__HelloWorldResponse
#define soap_read___ns1__HelloWorldResponse(soap, data) ( ((data) ? (soap_default___ns1__HelloWorldResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___ns1__HelloWorldResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__ExecuteCMDResponse_DEFINED
#define SOAP_TYPE__ns1__ExecuteCMDResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__ExecuteCMDResponse(struct soap*, struct _ns1__ExecuteCMDResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__ExecuteCMDResponse(struct soap*, const struct _ns1__ExecuteCMDResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ExecuteCMDResponse(struct soap*, const char*, int, const struct _ns1__ExecuteCMDResponse *, const char*);
SOAP_FMAC3 struct _ns1__ExecuteCMDResponse * SOAP_FMAC4 soap_in__ns1__ExecuteCMDResponse(struct soap*, const char*, struct _ns1__ExecuteCMDResponse *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__ExecuteCMDResponse(struct soap*, const struct _ns1__ExecuteCMDResponse *, const char*, const char*);

#ifndef soap_write__ns1__ExecuteCMDResponse
#define soap_write__ns1__ExecuteCMDResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__ExecuteCMDResponse(soap, data), 0) || soap_put__ns1__ExecuteCMDResponse(soap, data, "ns1:ExecuteCMDResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__ExecuteCMDResponse * SOAP_FMAC4 soap_get__ns1__ExecuteCMDResponse(struct soap*, struct _ns1__ExecuteCMDResponse *, const char*, const char*);

#ifndef soap_read__ns1__ExecuteCMDResponse
#define soap_read__ns1__ExecuteCMDResponse(soap, data) ( ((data) ? (soap_default__ns1__ExecuteCMDResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__ExecuteCMDResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__ExecuteCMD_DEFINED
#define SOAP_TYPE__ns1__ExecuteCMD_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__ExecuteCMD(struct soap*, struct _ns1__ExecuteCMD *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__ExecuteCMD(struct soap*, const struct _ns1__ExecuteCMD *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ExecuteCMD(struct soap*, const char*, int, const struct _ns1__ExecuteCMD *, const char*);
SOAP_FMAC3 struct _ns1__ExecuteCMD * SOAP_FMAC4 soap_in__ns1__ExecuteCMD(struct soap*, const char*, struct _ns1__ExecuteCMD *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__ExecuteCMD(struct soap*, const struct _ns1__ExecuteCMD *, const char*, const char*);

#ifndef soap_write__ns1__ExecuteCMD
#define soap_write__ns1__ExecuteCMD(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__ExecuteCMD(soap, data), 0) || soap_put__ns1__ExecuteCMD(soap, data, "ns1:ExecuteCMD", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__ExecuteCMD * SOAP_FMAC4 soap_get__ns1__ExecuteCMD(struct soap*, struct _ns1__ExecuteCMD *, const char*, const char*);

#ifndef soap_read__ns1__ExecuteCMD
#define soap_read__ns1__ExecuteCMD(soap, data) ( ((data) ? (soap_default__ns1__ExecuteCMD(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__ExecuteCMD(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__SlaveExecuteCMDResponse_DEFINED
#define SOAP_TYPE__ns1__SlaveExecuteCMDResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__SlaveExecuteCMDResponse(struct soap*, struct _ns1__SlaveExecuteCMDResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__SlaveExecuteCMDResponse(struct soap*, const struct _ns1__SlaveExecuteCMDResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SlaveExecuteCMDResponse(struct soap*, const char*, int, const struct _ns1__SlaveExecuteCMDResponse *, const char*);
SOAP_FMAC3 struct _ns1__SlaveExecuteCMDResponse * SOAP_FMAC4 soap_in__ns1__SlaveExecuteCMDResponse(struct soap*, const char*, struct _ns1__SlaveExecuteCMDResponse *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__SlaveExecuteCMDResponse(struct soap*, const struct _ns1__SlaveExecuteCMDResponse *, const char*, const char*);

#ifndef soap_write__ns1__SlaveExecuteCMDResponse
#define soap_write__ns1__SlaveExecuteCMDResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__SlaveExecuteCMDResponse(soap, data), 0) || soap_put__ns1__SlaveExecuteCMDResponse(soap, data, "ns1:SlaveExecuteCMDResponse", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__SlaveExecuteCMDResponse * SOAP_FMAC4 soap_get__ns1__SlaveExecuteCMDResponse(struct soap*, struct _ns1__SlaveExecuteCMDResponse *, const char*, const char*);

#ifndef soap_read__ns1__SlaveExecuteCMDResponse
#define soap_read__ns1__SlaveExecuteCMDResponse(soap, data) ( ((data) ? (soap_default__ns1__SlaveExecuteCMDResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__SlaveExecuteCMDResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__ns1__SlaveExecuteCMD_DEFINED
#define SOAP_TYPE__ns1__SlaveExecuteCMD_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__ns1__SlaveExecuteCMD(struct soap*, struct _ns1__SlaveExecuteCMD *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__ns1__SlaveExecuteCMD(struct soap*, const struct _ns1__SlaveExecuteCMD *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__SlaveExecuteCMD(struct soap*, const char*, int, const struct _ns1__SlaveExecuteCMD *, const char*);
SOAP_FMAC3 struct _ns1__SlaveExecuteCMD * SOAP_FMAC4 soap_in__ns1__SlaveExecuteCMD(struct soap*, const char*, struct _ns1__SlaveExecuteCMD *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__ns1__SlaveExecuteCMD(struct soap*, const struct _ns1__SlaveExecuteCMD *, const char*, const char*);

#ifndef soap_write__ns1__SlaveExecuteCMD
#define soap_write__ns1__SlaveExecuteCMD(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ns1__SlaveExecuteCMD(soap, data), 0) || soap_put__ns1__SlaveExecuteCMD(soap, data, "ns1:SlaveExecuteCMD", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _ns1__SlaveExecuteCMD * SOAP_FMAC4 soap_get__ns1__SlaveExecuteCMD(struct soap*, struct _ns1__SlaveExecuteCMD *, const char*, const char*);

#ifndef soap_read__ns1__SlaveExecuteCMD
#define soap_read__ns1__SlaveExecuteCMD(soap, data) ( ((data) ? (soap_default__ns1__SlaveExecuteCMD(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__ns1__SlaveExecuteCMD(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ns3__ProtocolObject_DEFINED
#define SOAP_TYPE_ns3__ProtocolObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns3__ProtocolObject(struct soap*, struct ns3__ProtocolObject *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns3__ProtocolObject(struct soap*, const struct ns3__ProtocolObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__ProtocolObject(struct soap*, const char*, int, const struct ns3__ProtocolObject *, const char*);
SOAP_FMAC3 struct ns3__ProtocolObject * SOAP_FMAC4 soap_in_ns3__ProtocolObject(struct soap*, const char*, struct ns3__ProtocolObject *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__ProtocolObject(struct soap*, const struct ns3__ProtocolObject *, const char*, const char*);

#ifndef soap_write_ns3__ProtocolObject
#define soap_write_ns3__ProtocolObject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns3__ProtocolObject(soap, data), 0) || soap_put_ns3__ProtocolObject(soap, data, "ns3:ProtocolObject", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ns3__ProtocolObject * SOAP_FMAC4 soap_get_ns3__ProtocolObject(struct soap*, struct ns3__ProtocolObject *, const char*, const char*);

#ifndef soap_read_ns3__ProtocolObject
#define soap_read_ns3__ProtocolObject(soap, data) ( ((data) ? (soap_default_ns3__ProtocolObject(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ns3__ProtocolObject(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTo__ns1__ReportIPResponse__DEFINED
#define SOAP_TYPE_PointerTo__ns1__ReportIPResponse__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__ns1__ReportIPResponse_(struct soap*, struct __ns1__ReportIPResponse_ *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__ns1__ReportIPResponse_(struct soap*, const char *, int, struct __ns1__ReportIPResponse_ *const*, const char *);
SOAP_FMAC3 struct __ns1__ReportIPResponse_ ** SOAP_FMAC4 soap_in_PointerTo__ns1__ReportIPResponse_(struct soap*, const char*, struct __ns1__ReportIPResponse_ **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__ns1__ReportIPResponse_(struct soap*, struct __ns1__ReportIPResponse_ *const*, const char*, const char*);
SOAP_FMAC3 struct __ns1__ReportIPResponse_ ** SOAP_FMAC4 soap_get_PointerTo__ns1__ReportIPResponse_(struct soap*, struct __ns1__ReportIPResponse_ **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__ns1__HelloWorldResponse__DEFINED
#define SOAP_TYPE_PointerTo__ns1__HelloWorldResponse__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__ns1__HelloWorldResponse_(struct soap*, struct __ns1__HelloWorldResponse_ *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__ns1__HelloWorldResponse_(struct soap*, const char *, int, struct __ns1__HelloWorldResponse_ *const*, const char *);
SOAP_FMAC3 struct __ns1__HelloWorldResponse_ ** SOAP_FMAC4 soap_in_PointerTo__ns1__HelloWorldResponse_(struct soap*, const char*, struct __ns1__HelloWorldResponse_ **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__ns1__HelloWorldResponse_(struct soap*, struct __ns1__HelloWorldResponse_ *const*, const char*, const char*);
SOAP_FMAC3 struct __ns1__HelloWorldResponse_ ** SOAP_FMAC4 soap_get_PointerTo__ns1__HelloWorldResponse_(struct soap*, struct __ns1__HelloWorldResponse_ **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ExecuteCMDResponse_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ExecuteCMDResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ExecuteCMDResponse(struct soap*, struct _ns1__ExecuteCMDResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ExecuteCMDResponse(struct soap*, const char *, int, struct _ns1__ExecuteCMDResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__ExecuteCMDResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__ExecuteCMDResponse(struct soap*, const char*, struct _ns1__ExecuteCMDResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ExecuteCMDResponse(struct soap*, struct _ns1__ExecuteCMDResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__ExecuteCMDResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__ExecuteCMDResponse(struct soap*, struct _ns1__ExecuteCMDResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ExecuteCMD_DEFINED
#define SOAP_TYPE_PointerTo_ns1__ExecuteCMD_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ExecuteCMD(struct soap*, struct _ns1__ExecuteCMD *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ExecuteCMD(struct soap*, const char *, int, struct _ns1__ExecuteCMD *const*, const char *);
SOAP_FMAC3 struct _ns1__ExecuteCMD ** SOAP_FMAC4 soap_in_PointerTo_ns1__ExecuteCMD(struct soap*, const char*, struct _ns1__ExecuteCMD **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ExecuteCMD(struct soap*, struct _ns1__ExecuteCMD *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__ExecuteCMD ** SOAP_FMAC4 soap_get_PointerTo_ns1__ExecuteCMD(struct soap*, struct _ns1__ExecuteCMD **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__ns1__ReportIPResponse_DEFINED
#define SOAP_TYPE_PointerTo__ns1__ReportIPResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__ns1__ReportIPResponse(struct soap*, struct __ns1__ReportIPResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__ns1__ReportIPResponse(struct soap*, const char *, int, struct __ns1__ReportIPResponse *const*, const char *);
SOAP_FMAC3 struct __ns1__ReportIPResponse ** SOAP_FMAC4 soap_in_PointerTo__ns1__ReportIPResponse(struct soap*, const char*, struct __ns1__ReportIPResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__ns1__ReportIPResponse(struct soap*, struct __ns1__ReportIPResponse *const*, const char*, const char*);
SOAP_FMAC3 struct __ns1__ReportIPResponse ** SOAP_FMAC4 soap_get_PointerTo__ns1__ReportIPResponse(struct soap*, struct __ns1__ReportIPResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SlaveExecuteCMDResponse_DEFINED
#define SOAP_TYPE_PointerTo_ns1__SlaveExecuteCMDResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SlaveExecuteCMDResponse(struct soap*, struct _ns1__SlaveExecuteCMDResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SlaveExecuteCMDResponse(struct soap*, const char *, int, struct _ns1__SlaveExecuteCMDResponse *const*, const char *);
SOAP_FMAC3 struct _ns1__SlaveExecuteCMDResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__SlaveExecuteCMDResponse(struct soap*, const char*, struct _ns1__SlaveExecuteCMDResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SlaveExecuteCMDResponse(struct soap*, struct _ns1__SlaveExecuteCMDResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__SlaveExecuteCMDResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__SlaveExecuteCMDResponse(struct soap*, struct _ns1__SlaveExecuteCMDResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ns1__SlaveExecuteCMD_DEFINED
#define SOAP_TYPE_PointerTo_ns1__SlaveExecuteCMD_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__SlaveExecuteCMD(struct soap*, struct _ns1__SlaveExecuteCMD *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__SlaveExecuteCMD(struct soap*, const char *, int, struct _ns1__SlaveExecuteCMD *const*, const char *);
SOAP_FMAC3 struct _ns1__SlaveExecuteCMD ** SOAP_FMAC4 soap_in_PointerTo_ns1__SlaveExecuteCMD(struct soap*, const char*, struct _ns1__SlaveExecuteCMD **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__SlaveExecuteCMD(struct soap*, struct _ns1__SlaveExecuteCMD *const*, const char*, const char*);
SOAP_FMAC3 struct _ns1__SlaveExecuteCMD ** SOAP_FMAC4 soap_get_PointerTo_ns1__SlaveExecuteCMD(struct soap*, struct _ns1__SlaveExecuteCMD **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__ns1__HelloWorldResponse_DEFINED
#define SOAP_TYPE_PointerTo__ns1__HelloWorldResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__ns1__HelloWorldResponse(struct soap*, struct __ns1__HelloWorldResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__ns1__HelloWorldResponse(struct soap*, const char *, int, struct __ns1__HelloWorldResponse *const*, const char *);
SOAP_FMAC3 struct __ns1__HelloWorldResponse ** SOAP_FMAC4 soap_in_PointerTo__ns1__HelloWorldResponse(struct soap*, const char*, struct __ns1__HelloWorldResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__ns1__HelloWorldResponse(struct soap*, struct __ns1__HelloWorldResponse *const*, const char*, const char*);
SOAP_FMAC3 struct __ns1__HelloWorldResponse ** SOAP_FMAC4 soap_get_PointerTo__ns1__HelloWorldResponse(struct soap*, struct __ns1__HelloWorldResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons3__ProtocolObject_DEFINED
#define SOAP_TYPE_PointerTons3__ProtocolObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__ProtocolObject(struct soap*, struct ns3__ProtocolObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__ProtocolObject(struct soap*, const char *, int, struct ns3__ProtocolObject *const*, const char *);
SOAP_FMAC3 struct ns3__ProtocolObject ** SOAP_FMAC4 soap_in_PointerTons3__ProtocolObject(struct soap*, const char*, struct ns3__ProtocolObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__ProtocolObject(struct soap*, struct ns3__ProtocolObject *const*, const char*, const char*);
SOAP_FMAC3 struct ns3__ProtocolObject ** SOAP_FMAC4 soap_get_PointerTons3__ProtocolObject(struct soap*, struct ns3__ProtocolObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTons2__OperationType_DEFINED
#define SOAP_TYPE_PointerTons2__OperationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__OperationType(struct soap*, enum ns2__OperationType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__OperationType(struct soap*, const char *, int, enum ns2__OperationType *const*, const char *);
SOAP_FMAC3 enum ns2__OperationType ** SOAP_FMAC4 soap_in_PointerTons2__OperationType(struct soap*, const char*, enum ns2__OperationType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__OperationType(struct soap*, enum ns2__OperationType *const*, const char*, const char*);
SOAP_FMAC3 enum ns2__OperationType ** SOAP_FMAC4 soap_get_PointerTons2__OperationType(struct soap*, enum ns2__OperationType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__QName(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
